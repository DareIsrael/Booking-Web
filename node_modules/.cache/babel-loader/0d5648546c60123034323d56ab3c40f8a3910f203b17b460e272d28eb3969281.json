{"ast":null,"code":"var _jsxFileName = \"/Users/macbookair/WithYou/MernStack-Tour-Management/tour-management/frontend/src/components/Booking/BookingDetailsPdf.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport jsPDF from 'jspdf';\nimport { BASE_URL } from '../../utils/config';\nimport { Button } from 'reactstrap';\nimport logo from '../../assets/images/logo.png';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BookingDetailsPDF = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [bookingDetails, setBookingDetails] = useState(null);\n  const {\n    data: tour,\n    loading,\n    error\n  } = useFetch(`${BASE_URL}/tours/${id}`);\n  useEffect(() => {\n    const fetchBookingDetails = async () => {\n      try {\n        const response = await fetch(`${BASE_URL}/booking/${id}`);\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch booking details\");\n        }\n        const booking = await response.json();\n        setBookingDetails(booking);\n      } catch (error) {\n        console.error(\"Error fetching booking details:\", error);\n      }\n    };\n    fetchBookingDetails();\n  }, [id]);\n  const pdfGenerate = () => {\n    if (!bookingDetails) {\n      console.error(\"Booking details not available\");\n      return;\n    }\n\n    // Generate PDF using booking details\n    const doc = new jsPDF();\n    doc.addImage(logo, 'PNG', 25, 5, 30, 30); // Add logo\n    doc.setFontSize(12); // Set font size\n    doc.setFont(\"Helvetica\", \"normal\"); // Set font style\n    doc.text(10, 40, `Name: ${bookingDetails.fullName}`);\n    doc.text(10, 50, `Phone: ${bookingDetails.phone}`);\n    doc.text(10, 60, `User ID: ${bookingDetails.userId}`);\n    doc.text(10, 70, `Email: ${bookingDetails.userEmail}`);\n    doc.text(10, 80, `Guest Size: ${bookingDetails.guestSize}`);\n    doc.text(10, 90, `Booked At: ${new Date(bookingDetails.bookAt).toLocaleString()}`);\n\n    // Save the PDF\n    doc.save(\"ticket.pdf\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center'\n    },\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      onClick: pdfGenerate,\n      children: \"Download Ticket\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n_s(BookingDetailsPDF, \"Zg8yCU8zhJ/ibuiezPoxANYyPEo=\", true, function () {\n  return [useParams];\n});\n_c = BookingDetailsPDF;\nexport default BookingDetailsPDF;\n\n// components/Booking/BookingListComponent.js\n\n// import React, { useEffect, useState } from 'react';\n// import { BASE_URL } from '../../utils/config';\n\n// const BookingDetailsPdf = () => {\n//     const [bookings, setBookings] = useState(null);\n\n//     useEffect(() => {\n//         const fetchAllBookings = async () => {\n//             try {\n//                 const response = await fetch(`${BASE_URL}/booking`);\n//                 if (!response.ok) {\n//                     throw new Error(\"Failed to fetch bookings\");\n//                 }\n//                 const bookingsData = await response.json();\n//                 setBookings(bookingsData);\n//             } catch (error) {\n//                 console.error(\"Error fetching bookings:\", error);\n//                 setBookings([]);\n//             }\n//         };\n\n//         fetchAllBookings();\n//     }, []);\n\n//     if (!bookings) {\n//         return <div>Loading...</div>;\n//     }\n\n//     return (\n//         <div>\n//             <h2>All Bookings</h2>\n//             <ul>\n//                 {bookings.map((booking) => (\n//                     <li key={booking._id}>\n//                         <p>Name: {booking.fullName}</p>\n//                         <p>Phone: {booking.phone}</p>\n//                         <p>User ID: {booking.userId}</p>\n//                         {/* Add more details as needed */}\n//                     </li>\n//                 ))}\n//             </ul>\n//         </div>\n//     );\n// };\n\n// export default BookingDetailsPdf;\nvar _c;\n$RefreshReg$(_c, \"BookingDetailsPDF\");","map":{"version":3,"names":["React","useState","useEffect","jsPDF","BASE_URL","Button","logo","useParams","BookingDetailsPDF","id","bookingDetails","setBookingDetails","data","tour","loading","error","useFetch","fetchBookingDetails","response","fetch","ok","Error","booking","json","console","pdfGenerate","doc","addImage","setFontSize","setFont","text","fullName","phone","userId","userEmail","guestSize","Date","bookAt","toLocaleString","save","textAlign"],"sources":["/Users/macbookair/WithYou/MernStack-Tour-Management/tour-management/frontend/src/components/Booking/BookingDetailsPdf.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport jsPDF from 'jspdf';\nimport { BASE_URL } from '../../utils/config';\nimport { Button } from 'reactstrap';\nimport logo from '../../assets/images/logo.png';\nimport { useParams } from 'react-router-dom';\n\nconst BookingDetailsPDF = () => {\n    const { id } = useParams();\n    const [bookingDetails, setBookingDetails] = useState(null);\n\n    const { data: tour, loading, error } = useFetch(`${BASE_URL}/tours/${id}`);\n\n    useEffect(() => {\n        const fetchBookingDetails = async () => {\n            try {\n                const response = await fetch(`${BASE_URL}/booking/${id}`);\n                if (!response.ok) {\n                    throw new Error(\"Failed to fetch booking details\");\n                }\n                const booking = await response.json();\n                setBookingDetails(booking);\n            } catch (error) {\n                console.error(\"Error fetching booking details:\", error);\n            }\n        };\n\n        fetchBookingDetails();\n    }, [id]);\n\n    const pdfGenerate = () => {\n        if (!bookingDetails) {\n            console.error(\"Booking details not available\");\n            return;\n        }\n\n        // Generate PDF using booking details\n        const doc = new jsPDF();\n        doc.addImage(logo, 'PNG', 25, 5, 30, 30); // Add logo\n        doc.setFontSize(12); // Set font size\n        doc.setFont(\"Helvetica\", \"normal\"); // Set font style\n        doc.text(10, 40, `Name: ${bookingDetails.fullName}`);\n        doc.text(10, 50, `Phone: ${bookingDetails.phone}`);\n        doc.text(10, 60, `User ID: ${bookingDetails.userId}`);\n        doc.text(10, 70, `Email: ${bookingDetails.userEmail}`);\n        doc.text(10, 80, `Guest Size: ${bookingDetails.guestSize}`);\n        doc.text(10, 90, `Booked At: ${new Date(bookingDetails.bookAt).toLocaleString()}`);\n\n        // Save the PDF\n        doc.save(\"ticket.pdf\");\n    };\n\n    return (\n        <div style={{ textAlign: 'center' }}>\n            <Button onClick={pdfGenerate}>Download Ticket</Button>\n        </div>\n    );\n};\n\nexport default BookingDetailsPDF;\n\n\n\n// components/Booking/BookingListComponent.js\n\n\n\n// import React, { useEffect, useState } from 'react';\n// import { BASE_URL } from '../../utils/config';\n\n// const BookingDetailsPdf = () => {\n//     const [bookings, setBookings] = useState(null);\n\n//     useEffect(() => {\n//         const fetchAllBookings = async () => {\n//             try {\n//                 const response = await fetch(`${BASE_URL}/booking`);\n//                 if (!response.ok) {\n//                     throw new Error(\"Failed to fetch bookings\");\n//                 }\n//                 const bookingsData = await response.json();\n//                 setBookings(bookingsData);\n//             } catch (error) {\n//                 console.error(\"Error fetching bookings:\", error);\n//                 setBookings([]);\n//             }\n//         };\n\n//         fetchAllBookings();\n//     }, []);\n\n//     if (!bookings) {\n//         return <div>Loading...</div>;\n//     }\n\n//     return (\n//         <div>\n//             <h2>All Bookings</h2>\n//             <ul>\n//                 {bookings.map((booking) => (\n//                     <li key={booking._id}>\n//                         <p>Name: {booking.fullName}</p>\n//                         <p>Phone: {booking.phone}</p>\n//                         <p>User ID: {booking.userId}</p>\n//                         {/* Add more details as needed */}\n//                     </li>\n//                 ))}\n//             </ul>\n//         </div>\n//     );\n// };\n\n// export default BookingDetailsPdf;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}