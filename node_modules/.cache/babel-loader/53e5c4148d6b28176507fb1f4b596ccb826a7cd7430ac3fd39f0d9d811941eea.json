{"ast":null,"code":"var _s2 = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nconst useFetch = url => {\n  _s2();\n  const [data, setData] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    var _s = $RefreshSig$();\n    const fetchData = async () => {\n      _s();\n      setLoading(true);\n      useEffect(() => {\n        setLoading(true);\n        setTimeout(() => {\n          setLoading(false);\n        }, 5000);\n      }, []);\n      try {\n        const res = await fetch(url);\n        if (!res.ok) {\n          setError('failed to fetch');\n        }\n        const result = await res.json();\n        setData(result.data);\n        setLoading(false);\n      } catch (err) {\n        setError(err.message);\n        setLoading(false);\n      }\n    };\n    _s(fetchData, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n    fetchData();\n  }, [url]);\n  return {\n    data,\n    error,\n    loading\n  };\n};\n_s2(useFetch, \"6nhoqVvctpRRYiww7uwVz/g7/BM=\");\nexport default useFetch;","map":{"version":3,"names":["useState","useEffect","useFetch","url","data","setData","error","setError","loading","setLoading","fetchData","setTimeout","res","fetch","ok","result","json","err","message"],"sources":["/Users/macbookair/WithYou/MernStack-Tour-Management/tour-management/frontend/src/hooks/useFetch.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst useFetch = (url) => {\n    const [data, setData] = useState([])\n    const [error, setError] = useState(null)\n    const [loading, setLoading] = useState(false)\n\n    useEffect (()=> {\n        const fetchData = async () => {\n            setLoading (true)\n\n            useEffect(()=> {\n                setLoading(true)\n                setTimeout(()=> {\n                setLoading(false)\n                }, 5000)\n             }, [])\n    \n            try {\n                const res = await fetch (url)\n    \n                if (!res.ok) {\n                    setError('failed to fetch')\n                  \n                }\n                const result = await res.json () \n                setData(result.data)\n                setLoading(false)\n            } catch (err) {\n                setError(err.message)\n                setLoading(false)\n            }\n        };\n        fetchData();\n    },[url]);\n\n    return  {\n        data,\n        error,\n        loading\n    }\n    \n}\n\nexport default useFetch;\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,MAAMC,QAAQ,GAAIC,GAAG,IAAK;EAAA;EACtB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAE7CC,SAAS,CAAE,MAAK;IAAA;IACZ,MAAMS,SAAS,GAAG,YAAY;MAAA;MAC1BD,UAAU,CAAE,IAAI,CAAC;MAEjBR,SAAS,CAAC,MAAK;QACXQ,UAAU,CAAC,IAAI,CAAC;QAChBE,UAAU,CAAC,MAAK;UAChBF,UAAU,CAAC,KAAK,CAAC;QACjB,CAAC,EAAE,IAAI,CAAC;MACX,CAAC,EAAE,EAAE,CAAC;MAEP,IAAI;QACA,MAAMG,GAAG,GAAG,MAAMC,KAAK,CAAEV,GAAG,CAAC;QAE7B,IAAI,CAACS,GAAG,CAACE,EAAE,EAAE;UACTP,QAAQ,CAAC,iBAAiB,CAAC;QAE/B;QACA,MAAMQ,MAAM,GAAG,MAAMH,GAAG,CAACI,IAAI,EAAG;QAChCX,OAAO,CAACU,MAAM,CAACX,IAAI,CAAC;QACpBK,UAAU,CAAC,KAAK,CAAC;MACrB,CAAC,CAAC,OAAOQ,GAAG,EAAE;QACVV,QAAQ,CAACU,GAAG,CAACC,OAAO,CAAC;QACrBT,UAAU,CAAC,KAAK,CAAC;MACrB;IACJ,CAAC;IAAC,GAxBIC,SAAS;IAyBfA,SAAS,EAAE;EACf,CAAC,EAAC,CAACP,GAAG,CAAC,CAAC;EAER,OAAQ;IACJC,IAAI;IACJE,KAAK;IACLE;EACJ,CAAC;AAEL,CAAC;AAAA,IAxCKN,QAAQ;AA0Cd,eAAeA,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}